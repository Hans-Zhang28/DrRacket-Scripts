;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-reader.ss" "lang")((modname taxicab) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f ())))
  ;;
;;**************************************************************
;; Zhenghan Zhang(20517543)
;; CS 135 Fall 2014
;; Assignment 4 Question 4
;;**************************************************************
;;

(define distance-a (cons (make-posn 1 2)
                         (cons (make-posn 2 3)
                               (cons (make-posn 3 4) empty))))
(define distance-b (cons (make-posn 0 1)
                         (cons (make-posn -1 4)
                               (cons (make-posn -2 3) empty))))
(define distance-c (cons (make-posn 0 0)
                         (cons (make-posn 0 0)
                               (cons (make-posn 0 0) empty))))
(define distance-d (cons (make-posn -8 -5)
                         (cons (make-posn 2 3)
                               (cons (make-posn 2 3) empty))))
(define distance-e (cons (make-posn -1 -1)
                         (cons (make-posn -2 -2)
                               (cons (make-posn 0 0)
                                     (cons (make-posn 0 5) empty)))))
(define distance-f (cons (make-posn 3 -11)
                         (cons (make-posn -3 2)
                               (cons (make-posn 3 -11) empty))))
(define distance-g (cons (make-posn 100 0)
                         (cons (make-posn 99 0)
                               (cons (make-posn 98 0) empty))))

;; A List-Of-Posns is onf of:
;; *empty
;; *(cons Num List-Of-Posns)

(define (my-listof-posn-fn lst)
  (cond[(empty? lst)...]
       [else(...(posn-x(first lst))...
                (posn-y(first lst))...
                (my-listof-posn-fn (rest lst))...)]))

;; (taxicab-distance lo-posn) produces the taxicab distance              
;; of the given list of points.
;; taxicab-distance: (listof Posn) -> Num                             
;; Requires: this program only consumes a nonempty (listof Posn)
;; Examples
(check-expect (taxicab-distance distance-a) 4)
(check-expect (taxicab-distance distance-b) 6)

(define (taxicab-distance lo-posn)
  (cond[(empty? (rest lo-posn)) 0]
       [else(+ (abs (- (posn-x(first(rest lo-posn)))
                       (posn-x(first lo-posn))))
               (abs (- (posn-y(first(rest lo-posn)))
                       (posn-y(first lo-posn))))
               (taxicab-distance (rest lo-posn)))]))
;; Tests
(check-expect (taxicab-distance distance-c) 0)
(check-expect (taxicab-distance distance-d) 18)
(check-expect (taxicab-distance distance-e) 11)
(check-expect (taxicab-distance distance-f) 38)
(check-expect (taxicab-distance distance-g) 2)
